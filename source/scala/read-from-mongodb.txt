To read data from MongoDB, call the ``read`` method on your
DataFrame object. This method returns a
`DataFrameReader <https://spark.apache.org/docs/latest/api/scala/org/apache/spark/sql/DataFrameReader.html>`__
object, which you can use to specify the format and other configuration settings for your
batch read operation. 

.. include:: /includes/batch-read-settings.rst

The following code example shows how to use the previous
configuration settings to read data from ``people.contacts`` in MongoDB:

.. code-block:: scala

   val dataFrame = spark.read
                 .format("mongodb")
                 .option("database", "people")
                 .option("collection", "contacts")
                 .load()

.. tip:: DataFrame Type
   
   A DataFrame is a Dataset of ``Row`` objects.
   The ``DataFrame`` type is an alias for ``Dataset[Row]``.

.. _scala-implicit-schema:


Schema Inference
----------------

When you load a Dataset or DataFrame without a schema, Spark samples 
the records to infer the schema of the collection.

Suppose that the MongoDB collection ``people.contacts`` contained the following documents:

.. include:: /includes/contacts-example-collection.rst

The following operation loads data from ``people.contacts``
and infers the schema of the DataFrame:

.. code-block:: scala
   
   val dataFrame = spark.read()
                        .format("mongodb")
                        .option("database", "people")
                        .option("collection", "contacts")
                        .load()

To see the inferred schema, use the ``dataFrame.printSchema()`` method, as shown in
the following example:

.. io-code-block::
   :copyable: true

   .. input::
      :language: scala

      dataFrame.printSchema()
   
   .. output::
      :language: none
      :visible: false

      root
       |-- _id: struct (nullable = true)
       |    |-- oid: string (nullable = true)
       |-- age: integer (nullable = true)
       |-- name: string (nullable = true)
 
To see the data in the DataFrame, use the ``dataFrame.show()`` method, as shown in
the following example:

.. io-code-block::
   :copyable: true

   .. input::
      :language: scala

      dataFrame.show()
   
   .. output::
      :language: none
      :visible: false

      +--------------------+----+-------------+
      |                 _id| age|         name|
      +--------------------+----+-------------+
      |[585024d558bef808...|  50|Bilbo Baggins|
      |[585024d558bef808...|1000|      Gandalf|
      |[585024d558bef808...| 195|       Thorin|
      |[585024d558bef808...| 178|        Balin|
      |[585024d558bef808...|  77|         Kíli|
      |[585024d558bef808...| 169|       Dwalin|
      |[585024d558bef808...| 167|          Óin|
      |[585024d558bef808...| 158|        Glóin|
      |[585024d558bef808...|  82|         Fíli|
      |[585024d558bef808...|null|       Bombur|
      +--------------------+----+-------------+